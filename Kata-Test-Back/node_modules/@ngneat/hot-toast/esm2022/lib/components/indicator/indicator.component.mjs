import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { LoaderComponent } from './icons/loader/loader.component';
import { ErrorComponent } from './icons/error/error.component';
import { CheckMarkComponent } from './icons/checkmark/checkmark.component';
import { WarningComponent } from './icons/warning/warning.component';
import { InfoComponent } from './icons/info/info.component';
import * as i0 from "@angular/core";
export class IndicatorComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.3", ngImport: i0, type: IndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.1.3", type: IndicatorComponent, isStandalone: true, selector: "hot-toast-indicator", inputs: { theme: "theme", type: "type" }, ngImport: i0, template: "@if (type !== 'blank') {\n<div class=\"hot-toast-indicator-wrapper\">\n  <hot-toast-loader [theme]=\"theme\"></hot-toast-loader>\n  @if (type !== 'loading') {\n  <div class=\"hot-toast-status-wrapper\">\n    <div>\n      @switch (type) { @case ('error') {\n      <div>\n        <hot-toast-error [theme]=\"theme\"></hot-toast-error>\n      </div>\n      } @case ('success') {\n      <div>\n        <hot-toast-checkmark [theme]=\"theme\"></hot-toast-checkmark>\n      </div>\n      } @case ('warning') {\n      <div>\n        <hot-toast-warning [theme]=\"theme\"></hot-toast-warning>\n      </div>\n      } @case ('info') {\n      <div>\n        <hot-toast-info [theme]=\"theme\"></hot-toast-info>\n      </div>\n      } }\n    </div>\n  </div>\n  }\n</div>\n}\n", dependencies: [{ kind: "component", type: LoaderComponent, selector: "hot-toast-loader", inputs: ["theme"] }, { kind: "component", type: ErrorComponent, selector: "hot-toast-error", inputs: ["theme"] }, { kind: "component", type: CheckMarkComponent, selector: "hot-toast-checkmark", inputs: ["theme"] }, { kind: "component", type: WarningComponent, selector: "hot-toast-warning", inputs: ["theme"] }, { kind: "component", type: InfoComponent, selector: "hot-toast-info", inputs: ["theme"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.3", ngImport: i0, type: IndicatorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'hot-toast-indicator', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [LoaderComponent, ErrorComponent, CheckMarkComponent, WarningComponent, InfoComponent], template: "@if (type !== 'blank') {\n<div class=\"hot-toast-indicator-wrapper\">\n  <hot-toast-loader [theme]=\"theme\"></hot-toast-loader>\n  @if (type !== 'loading') {\n  <div class=\"hot-toast-status-wrapper\">\n    <div>\n      @switch (type) { @case ('error') {\n      <div>\n        <hot-toast-error [theme]=\"theme\"></hot-toast-error>\n      </div>\n      } @case ('success') {\n      <div>\n        <hot-toast-checkmark [theme]=\"theme\"></hot-toast-checkmark>\n      </div>\n      } @case ('warning') {\n      <div>\n        <hot-toast-warning [theme]=\"theme\"></hot-toast-warning>\n      </div>\n      } @case ('info') {\n      <div>\n        <hot-toast-info [theme]=\"theme\"></hot-toast-info>\n      </div>\n      } }\n    </div>\n  </div>\n  }\n</div>\n}\n" }]
        }], propDecorators: { theme: [{
                type: Input
            }], type: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kaWNhdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nbmVhdC9ob3QtdG9hc3Qvc3JjL2xpYi9jb21wb25lbnRzL2luZGljYXRvci9pbmRpY2F0b3IuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmduZWF0L2hvdC10b2FzdC9zcmMvbGliL2NvbXBvbmVudHMvaW5kaWNhdG9yL2luZGljYXRvci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUcxRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFTNUQsTUFBTSxPQUFPLGtCQUFrQjs4R0FBbEIsa0JBQWtCO2tHQUFsQixrQkFBa0IseUhDaEIvQiwwdkJBNEJBLDRDRGRZLGVBQWUsZ0ZBQUUsY0FBYywrRUFBRSxrQkFBa0IsbUZBQUUsZ0JBQWdCLGlGQUFFLGFBQWE7OzJGQUVuRixrQkFBa0I7a0JBUDlCLFNBQVM7K0JBQ0UscUJBQXFCLG1CQUVkLHVCQUF1QixDQUFDLE1BQU0sY0FDbkMsSUFBSSxXQUNQLENBQUMsZUFBZSxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLENBQUM7OEJBR3RGLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBJY29uVGhlbWUsIFRvYXN0VHlwZSB9IGZyb20gJy4uLy4uL2hvdC10b2FzdC5tb2RlbCc7XG5pbXBvcnQgeyBMb2FkZXJDb21wb25lbnQgfSBmcm9tICcuL2ljb25zL2xvYWRlci9sb2FkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEVycm9yQ29tcG9uZW50IH0gZnJvbSAnLi9pY29ucy9lcnJvci9lcnJvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ2hlY2tNYXJrQ29tcG9uZW50IH0gZnJvbSAnLi9pY29ucy9jaGVja21hcmsvY2hlY2ttYXJrLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBXYXJuaW5nQ29tcG9uZW50IH0gZnJvbSAnLi9pY29ucy93YXJuaW5nL3dhcm5pbmcuY29tcG9uZW50JztcbmltcG9ydCB7IEluZm9Db21wb25lbnQgfSBmcm9tICcuL2ljb25zL2luZm8vaW5mby5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdob3QtdG9hc3QtaW5kaWNhdG9yJyxcbiAgdGVtcGxhdGVVcmw6ICdpbmRpY2F0b3IuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0xvYWRlckNvbXBvbmVudCwgRXJyb3JDb21wb25lbnQsIENoZWNrTWFya0NvbXBvbmVudCwgV2FybmluZ0NvbXBvbmVudCwgSW5mb0NvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIEluZGljYXRvckNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHRoZW1lOiBJY29uVGhlbWU7XG4gIEBJbnB1dCgpIHR5cGU6IFRvYXN0VHlwZTtcbn1cbiIsIkBpZiAodHlwZSAhPT0gJ2JsYW5rJykge1xuPGRpdiBjbGFzcz1cImhvdC10b2FzdC1pbmRpY2F0b3Itd3JhcHBlclwiPlxuICA8aG90LXRvYXN0LWxvYWRlciBbdGhlbWVdPVwidGhlbWVcIj48L2hvdC10b2FzdC1sb2FkZXI+XG4gIEBpZiAodHlwZSAhPT0gJ2xvYWRpbmcnKSB7XG4gIDxkaXYgY2xhc3M9XCJob3QtdG9hc3Qtc3RhdHVzLXdyYXBwZXJcIj5cbiAgICA8ZGl2PlxuICAgICAgQHN3aXRjaCAodHlwZSkgeyBAY2FzZSAoJ2Vycm9yJykge1xuICAgICAgPGRpdj5cbiAgICAgICAgPGhvdC10b2FzdC1lcnJvciBbdGhlbWVdPVwidGhlbWVcIj48L2hvdC10b2FzdC1lcnJvcj5cbiAgICAgIDwvZGl2PlxuICAgICAgfSBAY2FzZSAoJ3N1Y2Nlc3MnKSB7XG4gICAgICA8ZGl2PlxuICAgICAgICA8aG90LXRvYXN0LWNoZWNrbWFyayBbdGhlbWVdPVwidGhlbWVcIj48L2hvdC10b2FzdC1jaGVja21hcms+XG4gICAgICA8L2Rpdj5cbiAgICAgIH0gQGNhc2UgKCd3YXJuaW5nJykge1xuICAgICAgPGRpdj5cbiAgICAgICAgPGhvdC10b2FzdC13YXJuaW5nIFt0aGVtZV09XCJ0aGVtZVwiPjwvaG90LXRvYXN0LXdhcm5pbmc+XG4gICAgICA8L2Rpdj5cbiAgICAgIH0gQGNhc2UgKCdpbmZvJykge1xuICAgICAgPGRpdj5cbiAgICAgICAgPGhvdC10b2FzdC1pbmZvIFt0aGVtZV09XCJ0aGVtZVwiPjwvaG90LXRvYXN0LWluZm8+XG4gICAgICA8L2Rpdj5cbiAgICAgIH0gfVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgfVxuPC9kaXY+XG59XG4iXX0=